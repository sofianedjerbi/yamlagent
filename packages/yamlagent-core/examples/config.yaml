# Main configuration file with imports
version: 1

# Import tools and agents from separate files
imports:
  - ./tools.yaml
  - ./agents.yaml

# Define workflows that use the imported agents and tools
tasks:
  - id: implement-feature
    description: "Implement a new feature with frontend and backend"
    working_dir: "."
    files:
      read:
        - "**/*"
      write:
        - "src/**/*"
        - "tests/**/*"
    steps:
      - agent:
          use: fe-impl
          with:
            prompt: |
              Build the frontend UI for:
              {{ inputs.feature_description }}

              Requirements:
              - Use React with TypeScript
              - Follow existing component patterns
              - Add proper error handling
              - Include unit tests

      - agent:
          use: be-impl
          with:
            prompt: |
              Build the backend API for:
              {{ inputs.feature_description }}

              Requirements:
              - Create REST endpoints
              - Add input validation
              - Write comprehensive tests
              - Update API documentation

      - agent:
          use: code-reviewer
          with:
            prompt: |
              Review the implemented changes for:
              {{ inputs.feature_description }}

              Check for:
              - Code quality and best practices
              - Test coverage
              - Security issues
              - Documentation completeness

  - id: refactor-code
    description: "Clean code refactoring"
    working_dir: "."
    files:
      read:
        - "**/*"
      write:
        - "src/**/*"
    steps:
      - agent:
          use: code-reviewer
          with:
            prompt: |
              Identify code smells and areas for improvement in:
              {{ inputs.target_files }}

      - agent:
          use: be-impl
          with:
            prompt: |
              Refactor the code based on the review feedback.
              Apply SOLID principles and design patterns where appropriate.
              Ensure all tests still pass.

  - id: add-tests
    description: "Add comprehensive test coverage"
    working_dir: "."
    files:
      read:
        - "src/**/*"
        - "tests/**/*"
      write:
        - "tests/**/*"
    steps:
      - agent:
          use: be-impl
          with:
            prompt: |
              Write comprehensive tests for:
              {{ inputs.target_module }}

              Include:
              - Unit tests for all functions
              - Integration tests for API endpoints
              - Edge cases and error handling
              - Mock external dependencies
